Microsoft (R) Macro Assembler Version 14.38.33133.0	    12/22/23 03:42:47
in.txt.out.asm						     Page 1 - 1


				.586
				.model flat, stdcall
				includelib libucrt.lib
				includelib kernel32.lib
				includelib C:\Users\givi\Documents\Курсовой проект КПО\StaticLibrary\StaticLiblary\StaticLibrary.lib
				ExitProcess proto :dword

				EXTRN BREAKL: proc
				EXTRN OutputInt: proc
				EXTRN OutputChar: proc
				EXTRN OutputBool: proc

				.stack 4096

 00000000			.const
 00000000 00000002			L1 sdword 2
 00000004 00000000			L2 sdword 0
 00000008 00000001			L3 sdword 1
 0000000C 00000000			L4 sdword 0
 00000010 000343FD			L5 sdword 214013
 00000014 00269EC3			L6 sdword 2531011
 00000018 7FFFFFFF			L7 sdword 2147483647
 0000001C 0000000A			L8 sdword 10
 00000020 0036				L9 word '6'
 00000022 00000006			L10 sdword 6
 00000026 00000001			L11 sdword 1

 00000000			.data
 00000000  00000100 [			buffer BYTE 256 dup(0)
	    00
	   ]
 00000100 0000				EvenCheckh word 0
 00000102 0000				primaryiseven word 0
 00000104 0000				primaryq word ?
 00000106 00000000			primaryn sdword 0
 0000010A 00000000			primarya sdword 0
 0000010E 00000000			primaryl sdword 0
 00000112 00000000			primaryz sdword 0

 00000000			.code
 00000000			EvenCheck proc EvenCheckk : sdword
 00000003  FF 75 08			push EvenCheckk
 00000006  FF 35 00000000 R		push L1
 0000000C  5B				pop ebx
 0000000D  58				pop eax
 0000000E  99				cdq
 0000000F  F7 FB			idiv ebx
 00000011  52				push edx
 00000012  8F 45 08			pop EvenCheckk
 00000015  8B 45 08			mov eax, EvenCheckk
 00000018  3B 05 00000004 R		cmp eax, L2
 0000001E  74 04			jz m0
 00000020  75 11			jnz m1
 00000022  74 0F			je m1
 00000024			m0:
 00000024  FF 35 00000008 R		push L3
 0000002A  66| 8F 05			pop EvenCheckh
	   00000100 R
 00000031  EB 0D			jmp e0
 00000033			m1:
 00000033  FF 35 0000000C R		push L4
 00000039  66| 8F 05			pop EvenCheckh
	   00000100 R
 00000040			e0:
 00000040  66| FF 35			push EvenCheckh
	   00000100 R
 00000047  EB 00			jmp local0
 00000049			local0:
 00000049  58				pop eax
					ret
 0000004E			EvenCheck ENDP

 0000004E			r proc rs : sdword
 00000051  FF 75 08			push rs
 00000054  FF 35 00000010 R		push L5
 0000005A  58				pop eax
 0000005B  5B				pop ebx
 0000005C  F7 E3			mul ebx
 0000005E  50				push eax
 0000005F  FF 35 00000014 R		push L6
 00000065  58				pop eax
 00000066  5B				pop ebx
 00000067  03 C3			add eax, ebx
 00000069  50				push eax
 0000006A  FF 35 00000018 R		push L7
 00000070  5B				pop ebx
 00000071  58				pop eax
 00000072  99				cdq
 00000073  F7 FB			idiv ebx
 00000075  52				push edx
 00000076  8F 45 08			pop rs
 00000079  FF 75 08			push rs
 0000007C  EB 00			jmp local1
 0000007E			local1:
 0000007E  58				pop eax
					ret
 00000083			r ENDP

 00000083			main proc
 00000083  FF 35 0000001C R		push L8
 00000089  5A				pop edx
 0000008A  FF 35 0000001C R		push L8
 00000090  E8 FFFFFF6B			call EvenCheck
 00000095  50				push eax
 00000096  66| 8F 05			pop primaryiseven
	   00000102 R
 0000009D  66| FF 35			push primaryiseven
	   00000102 R
 000000A4  E8 00000000 E		call OutputBool
 000000A9  E8 00000000 E		call BREAKL
 000000AE  66| FF 35			push L9
	   00000020 R
 000000B5  66| 8F 05			pop primaryq
	   00000104 R
 000000BC  66| FF 35			push primaryq
	   00000104 R
 000000C3  E8 00000000 E		call OutputChar
 000000C8  FF 35 00000022 R		push L10
 000000CE  8F 05 00000106 R		pop primaryn
 000000D4  FF 35 00000000 R		push L1
 000000DA  8F 05 0000010A R		pop primarya
 000000E0  FF 35 00000000 R		push L1
 000000E6  FF 35 0000010A R		push primarya
 000000EC  FF 35 00000000 R		push L1
 000000F2  5B				pop ebx
 000000F3  58				pop eax
 000000F4  2B C3			sub eax, ebx
 000000F6  50				push eax
 000000F7  5B				pop ebx
 000000F8  58				pop eax
 000000F9  99				cdq
 000000FA  F7 FB			idiv ebx
 000000FC  50				push eax
 000000FD  8F 05 0000010E R		pop primaryl
 00000103  FF 35 0000010E R		push primaryl
 00000109  E8 00000000 E		call OutputInt
 0000010E  FF 35 00000026 R		push L11
 00000114  5A				pop edx
 00000115  FF 35 00000026 R		push L11
 0000011B  E8 FFFFFF2E			call r
 00000120  50				push eax
 00000121  8F 05 00000112 R		pop primaryz
 00000127  FF 35 00000112 R		push primaryz
 0000012D  E8 00000000 E		call OutputInt
 00000132  E8 00000000 E		call ExitProcess
 00000137			main ENDP
				end main
Microsoft (R) Macro Assembler Version 14.38.33133.0	    12/22/23 03:42:47
in.txt.out.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 0000002A Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000116 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000137 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

EvenCheck  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000004E Public STDCALL
  EvenCheckk . . . . . . . . . .	DWord	 bp + 00000008
  m0 . . . . . . . . . . . . . .	L Near	 00000024 _TEXT	
  m1 . . . . . . . . . . . . . .	L Near	 00000033 _TEXT	
  e0 . . . . . . . . . . . . . .	L Near	 00000040 _TEXT	
  local0 . . . . . . . . . . . .	L Near	 00000049 _TEXT	
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000083 _TEXT	Length= 000000B4 Public STDCALL
r  . . . . . . . . . . . . . . .	P Near	 0000004E _TEXT	Length= 00000035 Public STDCALL
  rs . . . . . . . . . . . . . .	DWord	 bp + 00000008
  local1 . . . . . . . . . . . .	L Near	 0000007E _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
BREAKL . . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
EvenCheckh . . . . . . . . . . .	Word	 00000100 _DATA	
L10  . . . . . . . . . . . . . .	DWord	 00000022 CONST	
L11  . . . . . . . . . . . . . .	DWord	 00000026 CONST	
L1 . . . . . . . . . . . . . . .	DWord	 00000000 CONST	
L2 . . . . . . . . . . . . . . .	DWord	 00000004 CONST	
L3 . . . . . . . . . . . . . . .	DWord	 00000008 CONST	
L4 . . . . . . . . . . . . . . .	DWord	 0000000C CONST	
L5 . . . . . . . . . . . . . . .	DWord	 00000010 CONST	
L6 . . . . . . . . . . . . . . .	DWord	 00000014 CONST	
L7 . . . . . . . . . . . . . . .	DWord	 00000018 CONST	
L8 . . . . . . . . . . . . . . .	DWord	 0000001C CONST	
L9 . . . . . . . . . . . . . . .	Word	 00000020 CONST	
OutputBool . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
OutputChar . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
OutputInt  . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
buffer . . . . . . . . . . . . .	Byte	 00000000 _DATA	
primarya . . . . . . . . . . . .	DWord	 0000010A _DATA	
primaryiseven  . . . . . . . . .	Word	 00000102 _DATA	
primaryl . . . . . . . . . . . .	DWord	 0000010E _DATA	
primaryn . . . . . . . . . . . .	DWord	 00000106 _DATA	
primaryq . . . . . . . . . . . .	Word	 00000104 _DATA	
primaryz . . . . . . . . . . . .	DWord	 00000112 _DATA	

	   0 Warnings
	   0 Errors
